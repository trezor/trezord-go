!include MUI2.nsh
!include x64.nsh
!include LogicLib.nsh
!include WinVer.nsh


; StrContains
; This function does a case sensitive searches for an occurrence of a substring in a string.
; It returns the substring if it is found.
; Otherwise it returns null("").
; Written by kenglish_hi
; Adapted from StrReplace written by dandaman32


Var STR_HAYSTACK
Var STR_NEEDLE
Var STR_CONTAINS_VAR_1
Var STR_CONTAINS_VAR_2
Var STR_CONTAINS_VAR_3
Var STR_CONTAINS_VAR_4
Var STR_RETURN_VAR

Function StrContains
  Exch $STR_NEEDLE
  Exch 1
  Exch $STR_HAYSTACK
  ; Uncomment to debug
  ;MessageBox MB_OK 'STR_NEEDLE = $STR_NEEDLE STR_HAYSTACK = $STR_HAYSTACK '
    StrCpy $STR_RETURN_VAR ""
    StrCpy $STR_CONTAINS_VAR_1 -1
    StrLen $STR_CONTAINS_VAR_2 $STR_NEEDLE
    StrLen $STR_CONTAINS_VAR_4 $STR_HAYSTACK
    loop:
      IntOp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_1 + 1
      StrCpy $STR_CONTAINS_VAR_3 $STR_HAYSTACK $STR_CONTAINS_VAR_2 $STR_CONTAINS_VAR_1
      StrCmp $STR_CONTAINS_VAR_3 $STR_NEEDLE found
      StrCmp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_4 done
      Goto loop
    found:
      StrCpy $STR_RETURN_VAR $STR_NEEDLE
      Goto done
    done:
   Pop $STR_NEEDLE ;Prevent "invalid opcode" errors and keep the
   Exch $STR_RETURN_VAR
FunctionEnd

!macro _StrContainsConstructor OUT NEEDLE HAYSTACK
  Push `${HAYSTACK}`
  Push `${NEEDLE}`
  Call StrContains
  Pop `${OUT}`
!macroend

!define StrContains '!insertmacro "_StrContainsConstructor"'




RequestExecutionLevel admin

SetCompressor bzip2

Name "TREZOR Bridge"
InstallDirRegKey HKLM Software\TREZOR\Bridge InstallDir

ShowInstDetails hide
ShowUninstDetails hide

XPStyle on

Page directory
Page instfiles

DirText "Please select the installation folder."

Section "TREZOR Bridge"
  SectionIn RO

  DetailPrint "Stopping previous TREZOR Bridge"
  nsExec::Exec "taskkill /IM trezord.exe /F"

  SetOutPath "$INSTDIR"
  ${If} ${RunningX64}
    ${If} ${IsWin7}
      File /oname=wdi-simple.exe wdi-simple-64b.exe
    ${EndIf}
    File /oname=trezord.exe trezord-64b.exe
    File /oname=devcon.exe devcon-64b.exe
  ${Else}
    ${If} ${IsWin7}
      File /oname=wdi-simple.exe wdi-simple-32b.exe
    ${EndIf}
    File /oname=trezord.exe trezord-32b.exe
    File /oname=devcon.exe devcon-32b.exe
  ${EndIf}
	${If} ${IsWin7}
		File "reinstall-drivers.bat"
	${EndIf}
  File "trezord.ico"
SectionEnd

Section "Start Menu Shortcuts"
  CreateDirectory "$SMPROGRAMS\TREZOR Bridge"
  CreateShortCut "$SMPROGRAMS\TREZOR Bridge\Uninstall.lnk" "$INSTDIR\Uninstall.exe" "" "$INSTDIR\Uninstall.exe" 0
  CreateShortCut "$SMPROGRAMS\TREZOR Bridge\TREZOR Bridge.lnk" "$INSTDIR\trezord.exe" "-l $\"%APPDATA%\TREZOR Bridge\trezord.log$\"" "$INSTDIR\trezord.ico" 0
	${If} ${IsWin7}
		CreateShortCut "$SMPROGRAMS\TREZOR Bridge\Reinstall USB drivers.lnk" "$INSTDIR\reinstall-drivers.bat" "" "$INSTDIR\trezord.ico" 0
	${EndIf}
  CreateShortCut "$SMSTARTUP\TREZOR Bridge.lnk" "$INSTDIR\trezord.exe" "-l $\"%APPDATA%\TREZOR Bridge\trezord.log$\"" "$INSTDIR\trezord.ico" 0
SectionEnd

Var CMDRESULT
Var CONTAINS

Section "Check for connected devices"
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" rescan'

  DetailPrint "Checking for connected devices"
  nsExec::ExecToStack '"$INSTDIR\devcon.exe" find *vid_1209*'
  Pop $0
  Pop $CMDRESULT
  ${StrContains} $CONTAINS "No matching devices" $CMDRESULT

  ${DoWhile} $CONTAINS == ""
    MessageBox MB_OK "Please disconnect TREZOR"

    nsExec::ExecToStack '"$INSTDIR\devcon.exe" find *vid_1209*'
    Pop $0
    Pop $CMDRESULT
    ${StrContains} $CONTAINS "No matching devices" $CMDRESULT
  ${Loop}

  nsExec::ExecToStack '"$INSTDIR\devcon.exe" find *vid_534c*'
  Pop $0
  Pop $CMDRESULT
  ${StrContains} $CONTAINS "No matching devices" $CMDRESULT

  ${DoWhile} $CONTAINS == ""
    MessageBox MB_OK "Please disconnect TREZOR"

    nsExec::ExecToStack '"$INSTDIR\devcon.exe" find *vid_534c*'
    Pop $0
    Pop $CMDRESULT
    ${StrContains} $CONTAINS "No matching devices" $CMDRESULT
  ${Loop}
SectionEnd

Section "Uninstall previous drivers"
  DetailPrint "Uninstalling previous drivers"
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" removeall *vid_1209*'
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" removeall *vid_534c*'
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" rescan'
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" dp_find_delete "(Undefined Vendor)" libwdi'
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" dp_find_delete "SatoshiLabs" libwdi'
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" rescan'
SectionEnd

Section "Install drivers"
  ${If} ${IsWin7}
  DetailPrint "Installing drivers"
  nsExec::ExecToLog '"$sysdir\cmd.exe" /c ""$INSTDIR\wdi-simple.exe" --name "TREZOR" --manufacturer "SatoshiLabs" --vid 0x1209 --pid 0x53C0 --progressbar=$HWNDPARENT > "%AppData%\TREZOR Bridge\wdi-log.txt" 2>&1"'
  nsExec::ExecToLog '"$sysdir\cmd.exe" /c ""$INSTDIR\wdi-simple.exe" --name "TREZOR" --manufacturer "SatoshiLabs" --vid 0x1209 --pid 0x53C1 --iid 0 --progressbar=$HWNDPARENT >> "%AppData%\TREZOR Bridge\wdi-log.txt" 2>&1"'
  ${EndIf}
  nsExec::ExecToLog '"$INSTDIR\devcon.exe" rescan'
SectionEnd

Section "Uninstall"
  ExecWait "taskkill /f /im trezord.exe"

  Delete /rebootok "$SMSTARTUP\TREZOR Bridge.lnk"
  Delete /rebootok "$SMPROGRAMS\TREZOR Bridge\TREZOR Bridge.lnk"
  Delete /rebootok "$SMPROGRAMS\TREZOR Bridge\Uninstall.lnk"
  RMDir "$SMPROGRAMS\TREZOR Bridge"

  RMDir /r /rebootok "$INSTDIR\usb_driver"
  Delete /rebootok "$INSTDIR\devcon.exe"
  Delete /rebootok "$INSTDIR\wdi-simple.exe"
  Delete /rebootok "$INSTDIR\trezord.exe"
  Delete /rebootok "$INSTDIR\trezord.ico"
  Delete /rebootok "$INSTDIR\Uninstall.exe"
  RMDir "$INSTDIR"
SectionEnd

Section -post
  WriteUninstaller "$INSTDIR\Uninstall.exe"
SectionEnd

!define MUI_FINISHPAGE_RUN
!define MUI_FINISHPAGE_RUN_TEXT "Start TREZOR Bridge"
!define MUI_FINISHPAGE_RUN_FUNCTION "LaunchApplication"
!insertmacro MUI_PAGE_FINISH

Function LaunchApplication
  ExecShell "" "$SMPROGRAMS\TREZOR Bridge\TREZOR Bridge.lnk"
FunctionEnd
