// Code generated by trezorpb-meta, do not edit

package marshal

import (
	"github.com/golang/protobuf/proto"
	"github.com/trezor/trezord-go/trezorapi/trezorpb"
	"github.com/trezor/trezord-go/trezorapi/trezortypes"
)

func Marshal(msg proto.Message) (*trezortypes.Message, error) {
	var t trezorpb.MessageType
	switch msg.(type) {
	case *trezorpb.Success:
		t = trezorpb.MessageType_MessageType_Success
	case *trezorpb.SignIdentity:
		t = trezorpb.MessageType_MessageType_SignIdentity
	case *trezorpb.BinanceTxRequest:
		t = trezorpb.MessageType_MessageType_BinanceTxRequest
	case *trezorpb.LoadDevice:
		t = trezorpb.MessageType_MessageType_LoadDevice
	case *trezorpb.DebugLinkMemoryWrite:
		t = trezorpb.MessageType_MessageType_DebugLinkMemoryWrite
	case *trezorpb.LiskSignTx:
		t = trezorpb.MessageType_MessageType_LiskSignTx
	case *trezorpb.CardanoGetAddress:
		t = trezorpb.MessageType_MessageType_CardanoGetAddress
	case *trezorpb.GetEntropy:
		t = trezorpb.MessageType_MessageType_GetEntropy
	case *trezorpb.EthereumSignTx:
		t = trezorpb.MessageType_MessageType_EthereumSignTx
	case *trezorpb.StellarPathPaymentOp:
		t = trezorpb.MessageType_MessageType_StellarPathPaymentOp
	case *trezorpb.DebugLinkState:
		t = trezorpb.MessageType_MessageType_DebugLinkState
	case *trezorpb.DebugLinkMemoryRead:
		t = trezorpb.MessageType_MessageType_DebugLinkMemoryRead
	case *trezorpb.LiskAddress:
		t = trezorpb.MessageType_MessageType_LiskAddress
	case *trezorpb.PinMatrixRequest:
		t = trezorpb.MessageType_MessageType_PinMatrixRequest
	case *trezorpb.GetFeatures:
		t = trezorpb.MessageType_MessageType_GetFeatures
	case *trezorpb.Address:
		t = trezorpb.MessageType_MessageType_Address
	case *trezorpb.CosiCommit:
		t = trezorpb.MessageType_MessageType_CosiCommit
	case *trezorpb.DebugLinkGetState:
		t = trezorpb.MessageType_MessageType_DebugLinkGetState
	case *trezorpb.OntologyPublicKey:
		t = trezorpb.MessageType_MessageType_OntologyPublicKey
	case *trezorpb.RippleGetAddress:
		t = trezorpb.MessageType_MessageType_RippleGetAddress
	case *trezorpb.MoneroTransactionInitRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInitRequest
	case *trezorpb.BinanceSignTx:
		t = trezorpb.MessageType_MessageType_BinanceSignTx
	case *trezorpb.BinanceTransferMsg:
		t = trezorpb.MessageType_MessageType_BinanceTransferMsg
	case *trezorpb.CipherKeyValue:
		t = trezorpb.MessageType_MessageType_CipherKeyValue
	case *trezorpb.EthereumAddress:
		t = trezorpb.MessageType_MessageType_EthereumAddress
	case *trezorpb.MoneroTransactionSetInputAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSetInputAck
	case *trezorpb.EosSignTx:
		t = trezorpb.MessageType_MessageType_EosSignTx
	case *trezorpb.BinanceGetPublicKey:
		t = trezorpb.MessageType_MessageType_BinanceGetPublicKey
	case *trezorpb.StellarSignedTx:
		t = trezorpb.MessageType_MessageType_StellarSignedTx
	case *trezorpb.MoneroTransactionInputViniRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInputViniRequest
	case *trezorpb.MoneroTransactionSetOutputAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSetOutputAck
	case *trezorpb.VerifyMessage:
		t = trezorpb.MessageType_MessageType_VerifyMessage
	case *trezorpb.TezosSignedTx:
		t = trezorpb.MessageType_MessageType_TezosSignedTx
	case *trezorpb.TezosGetPublicKey:
		t = trezorpb.MessageType_MessageType_TezosGetPublicKey
	case *trezorpb.StellarAllowTrustOp:
		t = trezorpb.MessageType_MessageType_StellarAllowTrustOp
	case *trezorpb.StellarManageDataOp:
		t = trezorpb.MessageType_MessageType_StellarManageDataOp
	case *trezorpb.BinanceGetAddress:
		t = trezorpb.MessageType_MessageType_BinanceGetAddress
	case *trezorpb.BinanceSignedTx:
		t = trezorpb.MessageType_MessageType_BinanceSignedTx
	case *trezorpb.ResetDevice:
		t = trezorpb.MessageType_MessageType_ResetDevice
	case *trezorpb.MessageSignature:
		t = trezorpb.MessageType_MessageType_MessageSignature
	case *trezorpb.MoneroKeyImageSyncFinalRequest:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageSyncFinalRequest
	case *trezorpb.RecoveryDevice:
		t = trezorpb.MessageType_MessageType_RecoveryDevice
	case *trezorpb.StellarTxOpRequest:
		t = trezorpb.MessageType_MessageType_StellarTxOpRequest
	case *trezorpb.OntologySignedTransfer:
		t = trezorpb.MessageType_MessageType_OntologySignedTransfer
	case *trezorpb.MoneroTransactionInputsPermutationAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInputsPermutationAck
	case *trezorpb.WipeDevice:
		t = trezorpb.MessageType_MessageType_WipeDevice
	case *trezorpb.ECDHSessionKey:
		t = trezorpb.MessageType_MessageType_ECDHSessionKey
	case *trezorpb.StellarChangeTrustOp:
		t = trezorpb.MessageType_MessageType_StellarChangeTrustOp
	case *trezorpb.StellarBumpSequenceOp:
		t = trezorpb.MessageType_MessageType_StellarBumpSequenceOp
	case *trezorpb.BinanceCancelMsg:
		t = trezorpb.MessageType_MessageType_BinanceCancelMsg
	case *trezorpb.EthereumTxAck:
		t = trezorpb.MessageType_MessageType_EthereumTxAck
	case *trezorpb.TezosAddress:
		t = trezorpb.MessageType_MessageType_TezosAddress
	case *trezorpb.OntologySignWithdrawOng:
		t = trezorpb.MessageType_MessageType_OntologySignWithdrawOng
	case *trezorpb.PinMatrixAck:
		t = trezorpb.MessageType_MessageType_PinMatrixAck
	case *trezorpb.ButtonAck:
		t = trezorpb.MessageType_MessageType_ButtonAck
	case *trezorpb.SetU2FCounter:
		t = trezorpb.MessageType_MessageType_SetU2FCounter
	case *trezorpb.FirmwareUpload:
		t = trezorpb.MessageType_MessageType_FirmwareUpload
	case *trezorpb.DebugLinkFlashErase:
		t = trezorpb.MessageType_MessageType_DebugLinkFlashErase
	case *trezorpb.DebugMoneroDiagAck:
		t = trezorpb.MessageType_MessageType_DebugMoneroDiagAck
	case *trezorpb.MoneroGetTxKeyRequest:
		t = trezorpb.MessageType_MessageType_MoneroGetTxKeyRequest
	case *trezorpb.MoneroGetTxKeyAck:
		t = trezorpb.MessageType_MessageType_MoneroGetTxKeyAck
	case *trezorpb.Initialize:
		t = trezorpb.MessageType_MessageType_Initialize
	case *trezorpb.CosiSignature:
		t = trezorpb.MessageType_MessageType_CosiSignature
	case *trezorpb.TezosPublicKey:
		t = trezorpb.MessageType_MessageType_TezosPublicKey
	case *trezorpb.OntologyGetAddress:
		t = trezorpb.MessageType_MessageType_OntologyGetAddress
	case *trezorpb.OntologyGetPublicKey:
		t = trezorpb.MessageType_MessageType_OntologyGetPublicKey
	case *trezorpb.MoneroLiveRefreshStepAck:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshStepAck
	case *trezorpb.MoneroLiveRefreshStartAck:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshStartAck
	case *trezorpb.ApplySettings:
		t = trezorpb.MessageType_MessageType_ApplySettings
	case *trezorpb.ApplyFlags:
		t = trezorpb.MessageType_MessageType_ApplyFlags
	case *trezorpb.WordRequest:
		t = trezorpb.MessageType_MessageType_WordRequest
	case *trezorpb.WordAck:
		t = trezorpb.MessageType_MessageType_WordAck
	case *trezorpb.MoneroTransactionInitAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInitAck
	case *trezorpb.Failure:
		t = trezorpb.MessageType_MessageType_Failure
	case *trezorpb.NEMAddress:
		t = trezorpb.MessageType_MessageType_NEMAddress
	case *trezorpb.CardanoAddress:
		t = trezorpb.MessageType_MessageType_CardanoAddress
	case *trezorpb.MoneroTransactionInputsPermutationRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInputsPermutationRequest
	case *trezorpb.BinanceOrderMsg:
		t = trezorpb.MessageType_MessageType_BinanceOrderMsg
	case *trezorpb.StellarCreatePassiveOfferOp:
		t = trezorpb.MessageType_MessageType_StellarCreatePassiveOfferOp
	case *trezorpb.TronGetAddress:
		t = trezorpb.MessageType_MessageType_TronGetAddress
	case *trezorpb.TronSignTx:
		t = trezorpb.MessageType_MessageType_TronSignTx
	case *trezorpb.Cancel:
		t = trezorpb.MessageType_MessageType_Cancel
	case *trezorpb.ButtonRequest:
		t = trezorpb.MessageType_MessageType_ButtonRequest
	case *trezorpb.FirmwareRequest:
		t = trezorpb.MessageType_MessageType_FirmwareRequest
	case *trezorpb.EthereumVerifyMessage:
		t = trezorpb.MessageType_MessageType_EthereumVerifyMessage
	case *trezorpb.TezosSignTx:
		t = trezorpb.MessageType_MessageType_TezosSignTx
	case *trezorpb.MoneroGetWatchKey:
		t = trezorpb.MessageType_MessageType_MoneroGetWatchKey
	case *trezorpb.MoneroLiveRefreshFinalRequest:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshFinalRequest
	case *trezorpb.EosTxActionAck:
		t = trezorpb.MessageType_MessageType_EosTxActionAck
	case *trezorpb.PassphraseStateAck:
		t = trezorpb.MessageType_MessageType_PassphraseStateAck
	case *trezorpb.CosiSign:
		t = trezorpb.MessageType_MessageType_CosiSign
	case *trezorpb.EthereumGetPublicKey:
		t = trezorpb.MessageType_MessageType_EthereumGetPublicKey
	case *trezorpb.NEMDecryptMessage:
		t = trezorpb.MessageType_MessageType_NEMDecryptMessage
	case *trezorpb.StellarPaymentOp:
		t = trezorpb.MessageType_MessageType_StellarPaymentOp
	case *trezorpb.CardanoGetPublicKey:
		t = trezorpb.MessageType_MessageType_CardanoGetPublicKey
	case *trezorpb.RippleSignTx:
		t = trezorpb.MessageType_MessageType_RippleSignTx
	case *trezorpb.MoneroTransactionSetOutputRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSetOutputRequest
	case *trezorpb.EntropyRequest:
		t = trezorpb.MessageType_MessageType_EntropyRequest
	case *trezorpb.GetECDHSessionKey:
		t = trezorpb.MessageType_MessageType_GetECDHSessionKey
	case *trezorpb.EthereumPublicKey:
		t = trezorpb.MessageType_MessageType_EthereumPublicKey
	case *trezorpb.EthereumTxRequest:
		t = trezorpb.MessageType_MessageType_EthereumTxRequest
	case *trezorpb.NEMSignTx:
		t = trezorpb.MessageType_MessageType_NEMSignTx
	case *trezorpb.EosGetPublicKey:
		t = trezorpb.MessageType_MessageType_EosGetPublicKey
	case *trezorpb.ChangePin:
		t = trezorpb.MessageType_MessageType_ChangePin
	case *trezorpb.ClearSession:
		t = trezorpb.MessageType_MessageType_ClearSession
	case *trezorpb.DebugLinkStop:
		t = trezorpb.MessageType_MessageType_DebugLinkStop
	case *trezorpb.MoneroTransactionSignInputAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSignInputAck
	case *trezorpb.BinancePublicKey:
		t = trezorpb.MessageType_MessageType_BinancePublicKey
	case *trezorpb.TxAck:
		t = trezorpb.MessageType_MessageType_TxAck
	case *trezorpb.EthereumSignMessage:
		t = trezorpb.MessageType_MessageType_EthereumSignMessage
	case *trezorpb.LiskMessageSignature:
		t = trezorpb.MessageType_MessageType_LiskMessageSignature
	case *trezorpb.StellarSetOptionsOp:
		t = trezorpb.MessageType_MessageType_StellarSetOptionsOp
	case *trezorpb.StellarAccountMergeOp:
		t = trezorpb.MessageType_MessageType_StellarAccountMergeOp
	case *trezorpb.SignTx:
		t = trezorpb.MessageType_MessageType_SignTx
	case *trezorpb.EthereumMessageSignature:
		t = trezorpb.MessageType_MessageType_EthereumMessageSignature
	case *trezorpb.TronAddress:
		t = trezorpb.MessageType_MessageType_TronAddress
	case *trezorpb.MoneroTransactionFinalAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionFinalAck
	case *trezorpb.MoneroLiveRefreshStartRequest:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshStartRequest
	case *trezorpb.PassphraseStateRequest:
		t = trezorpb.MessageType_MessageType_PassphraseStateRequest
	case *trezorpb.SelfTest:
		t = trezorpb.MessageType_MessageType_SelfTest
	case *trezorpb.CipheredKeyValue:
		t = trezorpb.MessageType_MessageType_CipheredKeyValue
	case *trezorpb.CardanoPublicKey:
		t = trezorpb.MessageType_MessageType_CardanoPublicKey
	case *trezorpb.OntologySignOntIdAddAttributes:
		t = trezorpb.MessageType_MessageType_OntologySignOntIdAddAttributes
	case *trezorpb.StellarGetAddress:
		t = trezorpb.MessageType_MessageType_StellarGetAddress
	case *trezorpb.OntologySignedOntIdAddAttributes:
		t = trezorpb.MessageType_MessageType_OntologySignedOntIdAddAttributes
	case *trezorpb.DebugMoneroDiagRequest:
		t = trezorpb.MessageType_MessageType_DebugMoneroDiagRequest
	case *trezorpb.EosTxActionRequest:
		t = trezorpb.MessageType_MessageType_EosTxActionRequest
	case *trezorpb.FirmwareErase:
		t = trezorpb.MessageType_MessageType_FirmwareErase
	case *trezorpb.PublicKey:
		t = trezorpb.MessageType_MessageType_PublicKey
	case *trezorpb.CardanoTxAck:
		t = trezorpb.MessageType_MessageType_CardanoTxAck
	case *trezorpb.OntologySignTransfer:
		t = trezorpb.MessageType_MessageType_OntologySignTransfer
	case *trezorpb.EntropyAck:
		t = trezorpb.MessageType_MessageType_EntropyAck
	case *trezorpb.LiskPublicKey:
		t = trezorpb.MessageType_MessageType_LiskPublicKey
	case *trezorpb.StellarSignTx:
		t = trezorpb.MessageType_MessageType_StellarSignTx
	case *trezorpb.MoneroTransactionFinalRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionFinalRequest
	case *trezorpb.MoneroKeyImageSyncStepRequest:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageSyncStepRequest
	case *trezorpb.OntologySignedWithdrawOng:
		t = trezorpb.MessageType_MessageType_OntologySignedWithdrawOng
	case *trezorpb.RippleAddress:
		t = trezorpb.MessageType_MessageType_RippleAddress
	case *trezorpb.MoneroTransactionAllOutSetRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionAllOutSetRequest
	case *trezorpb.TxRequest:
		t = trezorpb.MessageType_MessageType_TxRequest
	case *trezorpb.GetAddress:
		t = trezorpb.MessageType_MessageType_GetAddress
	case *trezorpb.CosiCommitment:
		t = trezorpb.MessageType_MessageType_CosiCommitment
	case *trezorpb.DebugLinkDecision:
		t = trezorpb.MessageType_MessageType_DebugLinkDecision
	case *trezorpb.LiskGetPublicKey:
		t = trezorpb.MessageType_MessageType_LiskGetPublicKey
	case *trezorpb.MoneroKeyImageSyncStepAck:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageSyncStepAck
	case *trezorpb.MoneroWatchKey:
		t = trezorpb.MessageType_MessageType_MoneroWatchKey
	case *trezorpb.PassphraseRequest:
		t = trezorpb.MessageType_MessageType_PassphraseRequest
	case *trezorpb.SignMessage:
		t = trezorpb.MessageType_MessageType_SignMessage
	case *trezorpb.DebugLinkMemory:
		t = trezorpb.MessageType_MessageType_DebugLinkMemory
	case *trezorpb.MoneroTransactionSignInputRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSignInputRequest
	case *trezorpb.MoneroAddress:
		t = trezorpb.MessageType_MessageType_MoneroAddress
	case *trezorpb.EosPublicKey:
		t = trezorpb.MessageType_MessageType_EosPublicKey
	case *trezorpb.Ping:
		t = trezorpb.MessageType_MessageType_Ping
	case *trezorpb.NEMDecryptedMessage:
		t = trezorpb.MessageType_MessageType_NEMDecryptedMessage
	case *trezorpb.TronSignedTx:
		t = trezorpb.MessageType_MessageType_TronSignedTx
	case *trezorpb.MoneroTransactionSetInputRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionSetInputRequest
	case *trezorpb.MoneroGetAddress:
		t = trezorpb.MessageType_MessageType_MoneroGetAddress
	case *trezorpb.LiskVerifyMessage:
		t = trezorpb.MessageType_MessageType_LiskVerifyMessage
	case *trezorpb.StellarCreateAccountOp:
		t = trezorpb.MessageType_MessageType_StellarCreateAccountOp
	case *trezorpb.CardanoSignTx:
		t = trezorpb.MessageType_MessageType_CardanoSignTx
	case *trezorpb.MoneroTransactionInputViniAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionInputViniAck
	case *trezorpb.MoneroTransactionAllInputsSetAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionAllInputsSetAck
	case *trezorpb.EosSignedTx:
		t = trezorpb.MessageType_MessageType_EosSignedTx
	case *trezorpb.BinanceAddress:
		t = trezorpb.MessageType_MessageType_BinanceAddress
	case *trezorpb.PassphraseAck:
		t = trezorpb.MessageType_MessageType_PassphraseAck
	case *trezorpb.StellarAddress:
		t = trezorpb.MessageType_MessageType_StellarAddress
	case *trezorpb.OntologySignedOntIdRegister:
		t = trezorpb.MessageType_MessageType_OntologySignedOntIdRegister
	case *trezorpb.MoneroLiveRefreshStepRequest:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshStepRequest
	case *trezorpb.MoneroLiveRefreshFinalAck:
		t = trezorpb.MessageType_MessageType_MoneroLiveRefreshFinalAck
	case *trezorpb.BackupDevice:
		t = trezorpb.MessageType_MessageType_BackupDevice
	case *trezorpb.GetPublicKey:
		t = trezorpb.MessageType_MessageType_GetPublicKey
	case *trezorpb.RippleSignedTx:
		t = trezorpb.MessageType_MessageType_RippleSignedTx
	case *trezorpb.MoneroKeyImageExportInitAck:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageExportInitAck
	case *trezorpb.TezosGetAddress:
		t = trezorpb.MessageType_MessageType_TezosGetAddress
	case *trezorpb.CardanoTxRequest:
		t = trezorpb.MessageType_MessageType_CardanoTxRequest
	case *trezorpb.OntologyAddress:
		t = trezorpb.MessageType_MessageType_OntologyAddress
	case *trezorpb.Entropy:
		t = trezorpb.MessageType_MessageType_Entropy
	case *trezorpb.Features:
		t = trezorpb.MessageType_MessageType_Features
	case *trezorpb.NEMGetAddress:
		t = trezorpb.MessageType_MessageType_NEMGetAddress
	case *trezorpb.NEMSignedTx:
		t = trezorpb.MessageType_MessageType_NEMSignedTx
	case *trezorpb.LiskSignedTx:
		t = trezorpb.MessageType_MessageType_LiskSignedTx
	case *trezorpb.OntologySignOntIdRegister:
		t = trezorpb.MessageType_MessageType_OntologySignOntIdRegister
	case *trezorpb.SignedIdentity:
		t = trezorpb.MessageType_MessageType_SignedIdentity
	case *trezorpb.EthereumGetAddress:
		t = trezorpb.MessageType_MessageType_EthereumGetAddress
	case *trezorpb.MoneroTransactionAllInputsSetRequest:
		t = trezorpb.MessageType_MessageType_MoneroTransactionAllInputsSetRequest
	case *trezorpb.MoneroKeyImageExportInitRequest:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageExportInitRequest
	case *trezorpb.MoneroKeyImageSyncFinalAck:
		t = trezorpb.MessageType_MessageType_MoneroKeyImageSyncFinalAck
	case *trezorpb.MoneroTransactionAllOutSetAck:
		t = trezorpb.MessageType_MessageType_MoneroTransactionAllOutSetAck
	case *trezorpb.DebugLinkLog:
		t = trezorpb.MessageType_MessageType_DebugLinkLog
	case *trezorpb.LiskGetAddress:
		t = trezorpb.MessageType_MessageType_LiskGetAddress
	case *trezorpb.LiskSignMessage:
		t = trezorpb.MessageType_MessageType_LiskSignMessage
	case *trezorpb.StellarManageOfferOp:
		t = trezorpb.MessageType_MessageType_StellarManageOfferOp
	case *trezorpb.CardanoSignedTx:
		t = trezorpb.MessageType_MessageType_CardanoSignedTx

	}
	marshalled, err := proto.Marshal(msg)
	if err != nil {
		return nil, err
	}

	return &trezortypes.Message{
		Kind: uint16(t),
		Data: marshalled,
	}, nil
}

func Unmarshal(msg *trezortypes.Message) (proto.Message, error) {
	var protomsg proto.Message
	switch msg.Kind {
	case uint16(trezorpb.MessageType_MessageType_Success):
		protomsg = &trezorpb.Success{}
	case uint16(trezorpb.MessageType_MessageType_SignIdentity):
		protomsg = &trezorpb.SignIdentity{}
	case uint16(trezorpb.MessageType_MessageType_BinanceTxRequest):
		protomsg = &trezorpb.BinanceTxRequest{}
	case uint16(trezorpb.MessageType_MessageType_LoadDevice):
		protomsg = &trezorpb.LoadDevice{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkMemoryWrite):
		protomsg = &trezorpb.DebugLinkMemoryWrite{}
	case uint16(trezorpb.MessageType_MessageType_LiskSignTx):
		protomsg = &trezorpb.LiskSignTx{}
	case uint16(trezorpb.MessageType_MessageType_CardanoGetAddress):
		protomsg = &trezorpb.CardanoGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_GetEntropy):
		protomsg = &trezorpb.GetEntropy{}
	case uint16(trezorpb.MessageType_MessageType_EthereumSignTx):
		protomsg = &trezorpb.EthereumSignTx{}
	case uint16(trezorpb.MessageType_MessageType_StellarPathPaymentOp):
		protomsg = &trezorpb.StellarPathPaymentOp{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkState):
		protomsg = &trezorpb.DebugLinkState{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkMemoryRead):
		protomsg = &trezorpb.DebugLinkMemoryRead{}
	case uint16(trezorpb.MessageType_MessageType_LiskAddress):
		protomsg = &trezorpb.LiskAddress{}
	case uint16(trezorpb.MessageType_MessageType_PinMatrixRequest):
		protomsg = &trezorpb.PinMatrixRequest{}
	case uint16(trezorpb.MessageType_MessageType_GetFeatures):
		protomsg = &trezorpb.GetFeatures{}
	case uint16(trezorpb.MessageType_MessageType_Address):
		protomsg = &trezorpb.Address{}
	case uint16(trezorpb.MessageType_MessageType_CosiCommit):
		protomsg = &trezorpb.CosiCommit{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkGetState):
		protomsg = &trezorpb.DebugLinkGetState{}
	case uint16(trezorpb.MessageType_MessageType_OntologyPublicKey):
		protomsg = &trezorpb.OntologyPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_RippleGetAddress):
		protomsg = &trezorpb.RippleGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInitRequest):
		protomsg = &trezorpb.MoneroTransactionInitRequest{}
	case uint16(trezorpb.MessageType_MessageType_BinanceSignTx):
		protomsg = &trezorpb.BinanceSignTx{}
	case uint16(trezorpb.MessageType_MessageType_BinanceTransferMsg):
		protomsg = &trezorpb.BinanceTransferMsg{}
	case uint16(trezorpb.MessageType_MessageType_CipherKeyValue):
		protomsg = &trezorpb.CipherKeyValue{}
	case uint16(trezorpb.MessageType_MessageType_EthereumAddress):
		protomsg = &trezorpb.EthereumAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSetInputAck):
		protomsg = &trezorpb.MoneroTransactionSetInputAck{}
	case uint16(trezorpb.MessageType_MessageType_EosSignTx):
		protomsg = &trezorpb.EosSignTx{}
	case uint16(trezorpb.MessageType_MessageType_BinanceGetPublicKey):
		protomsg = &trezorpb.BinanceGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_StellarSignedTx):
		protomsg = &trezorpb.StellarSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInputViniRequest):
		protomsg = &trezorpb.MoneroTransactionInputViniRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSetOutputAck):
		protomsg = &trezorpb.MoneroTransactionSetOutputAck{}
	case uint16(trezorpb.MessageType_MessageType_VerifyMessage):
		protomsg = &trezorpb.VerifyMessage{}
	case uint16(trezorpb.MessageType_MessageType_TezosSignedTx):
		protomsg = &trezorpb.TezosSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_TezosGetPublicKey):
		protomsg = &trezorpb.TezosGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_StellarAllowTrustOp):
		protomsg = &trezorpb.StellarAllowTrustOp{}
	case uint16(trezorpb.MessageType_MessageType_StellarManageDataOp):
		protomsg = &trezorpb.StellarManageDataOp{}
	case uint16(trezorpb.MessageType_MessageType_BinanceGetAddress):
		protomsg = &trezorpb.BinanceGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_BinanceSignedTx):
		protomsg = &trezorpb.BinanceSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_ResetDevice):
		protomsg = &trezorpb.ResetDevice{}
	case uint16(trezorpb.MessageType_MessageType_MessageSignature):
		protomsg = &trezorpb.MessageSignature{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageSyncFinalRequest):
		protomsg = &trezorpb.MoneroKeyImageSyncFinalRequest{}
	case uint16(trezorpb.MessageType_MessageType_RecoveryDevice):
		protomsg = &trezorpb.RecoveryDevice{}
	case uint16(trezorpb.MessageType_MessageType_StellarTxOpRequest):
		protomsg = &trezorpb.StellarTxOpRequest{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignedTransfer):
		protomsg = &trezorpb.OntologySignedTransfer{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInputsPermutationAck):
		protomsg = &trezorpb.MoneroTransactionInputsPermutationAck{}
	case uint16(trezorpb.MessageType_MessageType_WipeDevice):
		protomsg = &trezorpb.WipeDevice{}
	case uint16(trezorpb.MessageType_MessageType_ECDHSessionKey):
		protomsg = &trezorpb.ECDHSessionKey{}
	case uint16(trezorpb.MessageType_MessageType_StellarChangeTrustOp):
		protomsg = &trezorpb.StellarChangeTrustOp{}
	case uint16(trezorpb.MessageType_MessageType_StellarBumpSequenceOp):
		protomsg = &trezorpb.StellarBumpSequenceOp{}
	case uint16(trezorpb.MessageType_MessageType_BinanceCancelMsg):
		protomsg = &trezorpb.BinanceCancelMsg{}
	case uint16(trezorpb.MessageType_MessageType_EthereumTxAck):
		protomsg = &trezorpb.EthereumTxAck{}
	case uint16(trezorpb.MessageType_MessageType_TezosAddress):
		protomsg = &trezorpb.TezosAddress{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignWithdrawOng):
		protomsg = &trezorpb.OntologySignWithdrawOng{}
	case uint16(trezorpb.MessageType_MessageType_PinMatrixAck):
		protomsg = &trezorpb.PinMatrixAck{}
	case uint16(trezorpb.MessageType_MessageType_ButtonAck):
		protomsg = &trezorpb.ButtonAck{}
	case uint16(trezorpb.MessageType_MessageType_SetU2FCounter):
		protomsg = &trezorpb.SetU2FCounter{}
	case uint16(trezorpb.MessageType_MessageType_FirmwareUpload):
		protomsg = &trezorpb.FirmwareUpload{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkFlashErase):
		protomsg = &trezorpb.DebugLinkFlashErase{}
	case uint16(trezorpb.MessageType_MessageType_DebugMoneroDiagAck):
		protomsg = &trezorpb.DebugMoneroDiagAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroGetTxKeyRequest):
		protomsg = &trezorpb.MoneroGetTxKeyRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroGetTxKeyAck):
		protomsg = &trezorpb.MoneroGetTxKeyAck{}
	case uint16(trezorpb.MessageType_MessageType_Initialize):
		protomsg = &trezorpb.Initialize{}
	case uint16(trezorpb.MessageType_MessageType_CosiSignature):
		protomsg = &trezorpb.CosiSignature{}
	case uint16(trezorpb.MessageType_MessageType_TezosPublicKey):
		protomsg = &trezorpb.TezosPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_OntologyGetAddress):
		protomsg = &trezorpb.OntologyGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_OntologyGetPublicKey):
		protomsg = &trezorpb.OntologyGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshStepAck):
		protomsg = &trezorpb.MoneroLiveRefreshStepAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshStartAck):
		protomsg = &trezorpb.MoneroLiveRefreshStartAck{}
	case uint16(trezorpb.MessageType_MessageType_ApplySettings):
		protomsg = &trezorpb.ApplySettings{}
	case uint16(trezorpb.MessageType_MessageType_ApplyFlags):
		protomsg = &trezorpb.ApplyFlags{}
	case uint16(trezorpb.MessageType_MessageType_WordRequest):
		protomsg = &trezorpb.WordRequest{}
	case uint16(trezorpb.MessageType_MessageType_WordAck):
		protomsg = &trezorpb.WordAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInitAck):
		protomsg = &trezorpb.MoneroTransactionInitAck{}
	case uint16(trezorpb.MessageType_MessageType_Failure):
		protomsg = &trezorpb.Failure{}
	case uint16(trezorpb.MessageType_MessageType_NEMAddress):
		protomsg = &trezorpb.NEMAddress{}
	case uint16(trezorpb.MessageType_MessageType_CardanoAddress):
		protomsg = &trezorpb.CardanoAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInputsPermutationRequest):
		protomsg = &trezorpb.MoneroTransactionInputsPermutationRequest{}
	case uint16(trezorpb.MessageType_MessageType_BinanceOrderMsg):
		protomsg = &trezorpb.BinanceOrderMsg{}
	case uint16(trezorpb.MessageType_MessageType_StellarCreatePassiveOfferOp):
		protomsg = &trezorpb.StellarCreatePassiveOfferOp{}
	case uint16(trezorpb.MessageType_MessageType_TronGetAddress):
		protomsg = &trezorpb.TronGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_TronSignTx):
		protomsg = &trezorpb.TronSignTx{}
	case uint16(trezorpb.MessageType_MessageType_Cancel):
		protomsg = &trezorpb.Cancel{}
	case uint16(trezorpb.MessageType_MessageType_ButtonRequest):
		protomsg = &trezorpb.ButtonRequest{}
	case uint16(trezorpb.MessageType_MessageType_FirmwareRequest):
		protomsg = &trezorpb.FirmwareRequest{}
	case uint16(trezorpb.MessageType_MessageType_EthereumVerifyMessage):
		protomsg = &trezorpb.EthereumVerifyMessage{}
	case uint16(trezorpb.MessageType_MessageType_TezosSignTx):
		protomsg = &trezorpb.TezosSignTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroGetWatchKey):
		protomsg = &trezorpb.MoneroGetWatchKey{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshFinalRequest):
		protomsg = &trezorpb.MoneroLiveRefreshFinalRequest{}
	case uint16(trezorpb.MessageType_MessageType_EosTxActionAck):
		protomsg = &trezorpb.EosTxActionAck{}
	case uint16(trezorpb.MessageType_MessageType_PassphraseStateAck):
		protomsg = &trezorpb.PassphraseStateAck{}
	case uint16(trezorpb.MessageType_MessageType_CosiSign):
		protomsg = &trezorpb.CosiSign{}
	case uint16(trezorpb.MessageType_MessageType_EthereumGetPublicKey):
		protomsg = &trezorpb.EthereumGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_NEMDecryptMessage):
		protomsg = &trezorpb.NEMDecryptMessage{}
	case uint16(trezorpb.MessageType_MessageType_StellarPaymentOp):
		protomsg = &trezorpb.StellarPaymentOp{}
	case uint16(trezorpb.MessageType_MessageType_CardanoGetPublicKey):
		protomsg = &trezorpb.CardanoGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_RippleSignTx):
		protomsg = &trezorpb.RippleSignTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSetOutputRequest):
		protomsg = &trezorpb.MoneroTransactionSetOutputRequest{}
	case uint16(trezorpb.MessageType_MessageType_EntropyRequest):
		protomsg = &trezorpb.EntropyRequest{}
	case uint16(trezorpb.MessageType_MessageType_GetECDHSessionKey):
		protomsg = &trezorpb.GetECDHSessionKey{}
	case uint16(trezorpb.MessageType_MessageType_EthereumPublicKey):
		protomsg = &trezorpb.EthereumPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_EthereumTxRequest):
		protomsg = &trezorpb.EthereumTxRequest{}
	case uint16(trezorpb.MessageType_MessageType_NEMSignTx):
		protomsg = &trezorpb.NEMSignTx{}
	case uint16(trezorpb.MessageType_MessageType_EosGetPublicKey):
		protomsg = &trezorpb.EosGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_ChangePin):
		protomsg = &trezorpb.ChangePin{}
	case uint16(trezorpb.MessageType_MessageType_ClearSession):
		protomsg = &trezorpb.ClearSession{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkStop):
		protomsg = &trezorpb.DebugLinkStop{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSignInputAck):
		protomsg = &trezorpb.MoneroTransactionSignInputAck{}
	case uint16(trezorpb.MessageType_MessageType_BinancePublicKey):
		protomsg = &trezorpb.BinancePublicKey{}
	case uint16(trezorpb.MessageType_MessageType_TxAck):
		protomsg = &trezorpb.TxAck{}
	case uint16(trezorpb.MessageType_MessageType_EthereumSignMessage):
		protomsg = &trezorpb.EthereumSignMessage{}
	case uint16(trezorpb.MessageType_MessageType_LiskMessageSignature):
		protomsg = &trezorpb.LiskMessageSignature{}
	case uint16(trezorpb.MessageType_MessageType_StellarSetOptionsOp):
		protomsg = &trezorpb.StellarSetOptionsOp{}
	case uint16(trezorpb.MessageType_MessageType_StellarAccountMergeOp):
		protomsg = &trezorpb.StellarAccountMergeOp{}
	case uint16(trezorpb.MessageType_MessageType_SignTx):
		protomsg = &trezorpb.SignTx{}
	case uint16(trezorpb.MessageType_MessageType_EthereumMessageSignature):
		protomsg = &trezorpb.EthereumMessageSignature{}
	case uint16(trezorpb.MessageType_MessageType_TronAddress):
		protomsg = &trezorpb.TronAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionFinalAck):
		protomsg = &trezorpb.MoneroTransactionFinalAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshStartRequest):
		protomsg = &trezorpb.MoneroLiveRefreshStartRequest{}
	case uint16(trezorpb.MessageType_MessageType_PassphraseStateRequest):
		protomsg = &trezorpb.PassphraseStateRequest{}
	case uint16(trezorpb.MessageType_MessageType_SelfTest):
		protomsg = &trezorpb.SelfTest{}
	case uint16(trezorpb.MessageType_MessageType_CipheredKeyValue):
		protomsg = &trezorpb.CipheredKeyValue{}
	case uint16(trezorpb.MessageType_MessageType_CardanoPublicKey):
		protomsg = &trezorpb.CardanoPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignOntIdAddAttributes):
		protomsg = &trezorpb.OntologySignOntIdAddAttributes{}
	case uint16(trezorpb.MessageType_MessageType_StellarGetAddress):
		protomsg = &trezorpb.StellarGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignedOntIdAddAttributes):
		protomsg = &trezorpb.OntologySignedOntIdAddAttributes{}
	case uint16(trezorpb.MessageType_MessageType_DebugMoneroDiagRequest):
		protomsg = &trezorpb.DebugMoneroDiagRequest{}
	case uint16(trezorpb.MessageType_MessageType_EosTxActionRequest):
		protomsg = &trezorpb.EosTxActionRequest{}
	case uint16(trezorpb.MessageType_MessageType_FirmwareErase):
		protomsg = &trezorpb.FirmwareErase{}
	case uint16(trezorpb.MessageType_MessageType_PublicKey):
		protomsg = &trezorpb.PublicKey{}
	case uint16(trezorpb.MessageType_MessageType_CardanoTxAck):
		protomsg = &trezorpb.CardanoTxAck{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignTransfer):
		protomsg = &trezorpb.OntologySignTransfer{}
	case uint16(trezorpb.MessageType_MessageType_EntropyAck):
		protomsg = &trezorpb.EntropyAck{}
	case uint16(trezorpb.MessageType_MessageType_LiskPublicKey):
		protomsg = &trezorpb.LiskPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_StellarSignTx):
		protomsg = &trezorpb.StellarSignTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionFinalRequest):
		protomsg = &trezorpb.MoneroTransactionFinalRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageSyncStepRequest):
		protomsg = &trezorpb.MoneroKeyImageSyncStepRequest{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignedWithdrawOng):
		protomsg = &trezorpb.OntologySignedWithdrawOng{}
	case uint16(trezorpb.MessageType_MessageType_RippleAddress):
		protomsg = &trezorpb.RippleAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionAllOutSetRequest):
		protomsg = &trezorpb.MoneroTransactionAllOutSetRequest{}
	case uint16(trezorpb.MessageType_MessageType_TxRequest):
		protomsg = &trezorpb.TxRequest{}
	case uint16(trezorpb.MessageType_MessageType_GetAddress):
		protomsg = &trezorpb.GetAddress{}
	case uint16(trezorpb.MessageType_MessageType_CosiCommitment):
		protomsg = &trezorpb.CosiCommitment{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkDecision):
		protomsg = &trezorpb.DebugLinkDecision{}
	case uint16(trezorpb.MessageType_MessageType_LiskGetPublicKey):
		protomsg = &trezorpb.LiskGetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageSyncStepAck):
		protomsg = &trezorpb.MoneroKeyImageSyncStepAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroWatchKey):
		protomsg = &trezorpb.MoneroWatchKey{}
	case uint16(trezorpb.MessageType_MessageType_PassphraseRequest):
		protomsg = &trezorpb.PassphraseRequest{}
	case uint16(trezorpb.MessageType_MessageType_SignMessage):
		protomsg = &trezorpb.SignMessage{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkMemory):
		protomsg = &trezorpb.DebugLinkMemory{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSignInputRequest):
		protomsg = &trezorpb.MoneroTransactionSignInputRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroAddress):
		protomsg = &trezorpb.MoneroAddress{}
	case uint16(trezorpb.MessageType_MessageType_EosPublicKey):
		protomsg = &trezorpb.EosPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_Ping):
		protomsg = &trezorpb.Ping{}
	case uint16(trezorpb.MessageType_MessageType_NEMDecryptedMessage):
		protomsg = &trezorpb.NEMDecryptedMessage{}
	case uint16(trezorpb.MessageType_MessageType_TronSignedTx):
		protomsg = &trezorpb.TronSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionSetInputRequest):
		protomsg = &trezorpb.MoneroTransactionSetInputRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroGetAddress):
		protomsg = &trezorpb.MoneroGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_LiskVerifyMessage):
		protomsg = &trezorpb.LiskVerifyMessage{}
	case uint16(trezorpb.MessageType_MessageType_StellarCreateAccountOp):
		protomsg = &trezorpb.StellarCreateAccountOp{}
	case uint16(trezorpb.MessageType_MessageType_CardanoSignTx):
		protomsg = &trezorpb.CardanoSignTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionInputViniAck):
		protomsg = &trezorpb.MoneroTransactionInputViniAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionAllInputsSetAck):
		protomsg = &trezorpb.MoneroTransactionAllInputsSetAck{}
	case uint16(trezorpb.MessageType_MessageType_EosSignedTx):
		protomsg = &trezorpb.EosSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_BinanceAddress):
		protomsg = &trezorpb.BinanceAddress{}
	case uint16(trezorpb.MessageType_MessageType_PassphraseAck):
		protomsg = &trezorpb.PassphraseAck{}
	case uint16(trezorpb.MessageType_MessageType_StellarAddress):
		protomsg = &trezorpb.StellarAddress{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignedOntIdRegister):
		protomsg = &trezorpb.OntologySignedOntIdRegister{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshStepRequest):
		protomsg = &trezorpb.MoneroLiveRefreshStepRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroLiveRefreshFinalAck):
		protomsg = &trezorpb.MoneroLiveRefreshFinalAck{}
	case uint16(trezorpb.MessageType_MessageType_BackupDevice):
		protomsg = &trezorpb.BackupDevice{}
	case uint16(trezorpb.MessageType_MessageType_GetPublicKey):
		protomsg = &trezorpb.GetPublicKey{}
	case uint16(trezorpb.MessageType_MessageType_RippleSignedTx):
		protomsg = &trezorpb.RippleSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageExportInitAck):
		protomsg = &trezorpb.MoneroKeyImageExportInitAck{}
	case uint16(trezorpb.MessageType_MessageType_TezosGetAddress):
		protomsg = &trezorpb.TezosGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_CardanoTxRequest):
		protomsg = &trezorpb.CardanoTxRequest{}
	case uint16(trezorpb.MessageType_MessageType_OntologyAddress):
		protomsg = &trezorpb.OntologyAddress{}
	case uint16(trezorpb.MessageType_MessageType_Entropy):
		protomsg = &trezorpb.Entropy{}
	case uint16(trezorpb.MessageType_MessageType_Features):
		protomsg = &trezorpb.Features{}
	case uint16(trezorpb.MessageType_MessageType_NEMGetAddress):
		protomsg = &trezorpb.NEMGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_NEMSignedTx):
		protomsg = &trezorpb.NEMSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_LiskSignedTx):
		protomsg = &trezorpb.LiskSignedTx{}
	case uint16(trezorpb.MessageType_MessageType_OntologySignOntIdRegister):
		protomsg = &trezorpb.OntologySignOntIdRegister{}
	case uint16(trezorpb.MessageType_MessageType_SignedIdentity):
		protomsg = &trezorpb.SignedIdentity{}
	case uint16(trezorpb.MessageType_MessageType_EthereumGetAddress):
		protomsg = &trezorpb.EthereumGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionAllInputsSetRequest):
		protomsg = &trezorpb.MoneroTransactionAllInputsSetRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageExportInitRequest):
		protomsg = &trezorpb.MoneroKeyImageExportInitRequest{}
	case uint16(trezorpb.MessageType_MessageType_MoneroKeyImageSyncFinalAck):
		protomsg = &trezorpb.MoneroKeyImageSyncFinalAck{}
	case uint16(trezorpb.MessageType_MessageType_MoneroTransactionAllOutSetAck):
		protomsg = &trezorpb.MoneroTransactionAllOutSetAck{}
	case uint16(trezorpb.MessageType_MessageType_DebugLinkLog):
		protomsg = &trezorpb.DebugLinkLog{}
	case uint16(trezorpb.MessageType_MessageType_LiskGetAddress):
		protomsg = &trezorpb.LiskGetAddress{}
	case uint16(trezorpb.MessageType_MessageType_LiskSignMessage):
		protomsg = &trezorpb.LiskSignMessage{}
	case uint16(trezorpb.MessageType_MessageType_StellarManageOfferOp):
		protomsg = &trezorpb.StellarManageOfferOp{}
	case uint16(trezorpb.MessageType_MessageType_CardanoSignedTx):
		protomsg = &trezorpb.CardanoSignedTx{}

	}
	err := proto.Unmarshal(msg.Data, protomsg)
	if err != nil {
		return nil, err
	}
	return protomsg, nil
}
